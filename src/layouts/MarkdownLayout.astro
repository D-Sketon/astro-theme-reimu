---
import "../styles/global.css";
import "../styles/base.css";
import "aos/dist/aos.css"; // AOS styles
import "baguettebox.js/dist/baguetteBox.min.css";
import "katex/dist/katex.min.css";

import type { CollectionEntry } from "astro:content";
import { ViewTransitions } from "astro:transitions";
import { BASE_URL, SITE, VALINE, WALINE } from "../utils/config";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import AfterFooter from "../components/AfterFooter.astro";
import Date from "../components/post/Date.astro";
import Tag from "../components/post/Tag.astro";
import Nav from "../components/post/Nav.astro";
import Comment from "../components/post/Comment.astro";
import ReadingCount from "../components/post/ReadingCount.astro";
import CommonMeta from "../components/partial/CommonMeta.astro";
import VendorFont from "../components/partial/VendorFont.astro";
import VendorScript from "../components/partial/VendorScript.astro";
import HeaderTitle from "../components/HeaderTitle.astro";

type Props = {
  post: CollectionEntry<"blog">["data"];
  url: string;
  nav?: {
    prev: CollectionEntry<"blog"> | null;
    next: CollectionEntry<"blog"> | null;
  };
};

const { nav, post, url } = Astro.props;

const {
  title,
  description,
  keywords,
  pubDate,
  cover,
  comment = true,
  tags = [],
} = post;
---

<!doctype html>
<html lang={SITE.language}>
  <head>
    <script is:inline>
      (function () {
        const storedTheme = JSON.parse(
          window.localStorage.getItem("theme") ?? '"auto"'
        );
        let presetTheme;
        if (storedTheme === "auto") {
          presetTheme = window.matchMedia("(prefers-color-scheme: dark)")
            .matches
            ? "dark"
            : "light";
        } else {
          presetTheme = storedTheme;
        }
        if (presetTheme === "dark") {
          document.documentElement.setAttribute("data-theme", "dark");
          document.documentElement.style.colorScheme = "dark";
        } else {
          document.documentElement.removeAttribute("data-theme");
          document.documentElement.style.colorScheme = "light";
        }
      })();
    </script>
    <CommonMeta title={title} description={description} keywords={keywords} />
    <VendorFont />
    <style>
      main {
        max-width: 1000px;
        margin: 0 auto;
      }

      .hr-line {
        margin: 10px 20px;
        opacity: 0.5;
        height: 3px;
        background-image: linear-gradient(
          to left,
          var(--red-0) 50%,
          transparent 0%
        );
        background-size: 20px 3px;
        background-repeat: repeat-x;
        filter: drop-shadow(0px 0px 2px red);
      }

      .article {
        width: calc(100% - 20px);
        margin: 0 auto;
      }

      .article-inner {
        background: var(--color-wrap);
        border-radius: 5px;
        overflow: hidden;
        transition: all 0.3s ease;
      }

      .article-meta {
        display: flex;
        flex-direction: column;
        padding: 20px 20px 0;
      }

      .article-entry {
        color: var(--color-default);
        padding: 0 35px;

        p,
        table {
          line-height: 1.8em;
          margin: 1.8em 0;
        }

        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
          font-weight: bold;
          line-height: 1.2em;
          margin: 1.2em 0;
        }

        h2 {
          margin-bottom: 40px;
        }

        a {
          color: var(--color-link);
          text-decoration: none;

          &:hover {
            text-decoration: underline;
          }
        }

        ul,
        ol,
        dl {
          margin-top: 1.8em;
          margin-bottom: 1.8em;
        }

        li:hover::marker {
          transition: color 0.2s ease;
          color: var(--red-1);
        }

        img,
        video {
          max-width: 100%;
          height: auto;
          display: block;
          margin: auto;
          transition: all 0.3s ease;
        }
        
        iframe {
          border: none;
        }

        table {
          width: 100%;
          border-collapse: collapse;
          border-spacing: 0;
        }

        th {
          font-weight: bold;
          border-bottom: 3px solid var(--color-border);
          padding-bottom: 0.5em;
        }

        td {
          border-bottom: 1px solid var(--color-border);
          padding: 10px 0;
        }

        blockquote {
          background: var(--red-5-5);
          border-left: 6px var(--red-4) solid;
          margin: 1.8em 0;
          border-radius: 5px;
          transition: all 0.3s ease;
          padding: 1px 10px;

          footer {
            font-size: 16px;
            margin: 1em 0;
            cite:before {
              content: "â€”";
              padding: 0 0.5em;
            }
          }
        }

        .expressive-code {
          margin: 20px 0;
        }
      }
      .article-footer {
        font-size: 14px;
        border-top: 1px solid var(--color-border);
        margin: 0 20px 10px;
        padding-top: 10px;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
    </style>
    <VendorScript />
    <ViewTransitions />
  </head>
  <body>
    <Header title={title} cover={cover}>
      <HeaderTitle title={title} url=`${BASE_URL}/` />
    </Header>
    <main>
      <article
        class="article"
        itemprop="blogPost"
        itemscope
        itemtype="https://schema.org/BlogPosting"
      >
        <div class="article-inner">
          <div class="article-meta">
            <Date pubDate={pubDate} />
          </div>
          <div class="hr-line"></div>
          <div class="article-entry" itemprop="articleBody">
            <slot />
          </div>
          {
            (tags.length ||
              (VALINE.enable && VALINE.visitor) ||
              (WALINE.enable && WALINE.pageview)) && (
              <footer class="article-footer">
                <Tag tags={tags} />
                <ReadingCount url={url} title={title} />
              </footer>
            )
          }
        </div>
        {nav && <Nav {...nav} />}
      </article>
      <Comment comment={comment} />
    </main>
    <Footer />
    <AfterFooter />
  </body>
</html>
