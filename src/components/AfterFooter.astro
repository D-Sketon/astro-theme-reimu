---
import { FOOTER } from "../utils/config";
import packageData from "../../package.json";

const copyright = String.raw`
 ______     ______     __     __    __     __  __    
/\  == \   /\  ___\   /\ \   /\ "-./  \   /\ \/\ \   
\ \  __<   \ \  __\   \ \ \  \ \ \-./\ \  \ \ \_\ \  
 \ \_\ \_\  \ \_____\  \ \_\  \ \_\ \ \_\  \ \_____\ 
  \/_/ /_/   \/_____/   \/_/   \/_/  \/_/   \/_____/ 
                                                  
`
---

<!-- busuanzi -->
{
  FOOTER.busuanzi && 
  <script>
  document.addEventListener('astro:page-load', () => {
    let script = document.createElement("script");
    script.async = true;
    script.src = "https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js";
    document.head.appendChild(script);
  })
</script>
}

<!-- aos -->
<script>
  import AOS from "@reimujs/aos";
  const aosInit = () => {
    AOS.init({
      duration: 1000,
      easing: "ease",
      once: true,
      offset: 50,
    });
  };
  aosInit();
  document.addEventListener("astro:after-swap", aosInit);
</script>
<!-- lozad -->
<script>
  import lozad from "lozad";
  const lozadInit = () => {
    const observer = lozad(".lazyload",  {
    loaded: (el) => {
      el.classList.add('lazyloaded');
    }
});
    observer.observe();
  };
  lozadInit();
  document.addEventListener("astro:after-swap", lozadInit);
</script>
<!-- Transitions -->
<script is:inline>
  document.addEventListener("astro:after-swap", () => {
    document.querySelectorAll("script[data-transition]").forEach((element) => {
      const { text, parentNode, id, className, type, src, dataset } = element;
      const code = text || element.textContent || element.innerHTML || "";
      parentNode.removeChild(element);

      const script = document.createElement("script");

      if (id) {
        script.id = id;
      }
      if (className) {
        script.className = className;
      }
      if (type) {
        script.type = type;
      }
      if (src) {
        // Force synchronous loading of peripheral JS.
        script.src = src;
        script.async = false;
      }
      if (dataset.pjax !== undefined) {
        script.dataset.pjax = "";
      }
      if (code !== "") {
        script.appendChild(document.createTextNode(code));
      }

      parentNode.appendChild(script);
    });
  });
</script>
<!-- ThemeToogle -->
<script>
  // prevent flash when using view transitions in astro
  const initColorMode = () => {
    const storedTheme = JSON.parse(
      window.localStorage.getItem("theme") ?? '"auto"'
    );
    let presetTheme;
    if (storedTheme === "auto") {
      presetTheme = window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light";
    } else {
      presetTheme = storedTheme;
    }
    if (presetTheme === "dark") {
      document.documentElement.setAttribute("data-theme", "dark");
      document.documentElement.style.colorScheme = "dark";
    } else {
      document.documentElement.removeAttribute("data-theme");
      document.documentElement.style.colorScheme = "light";
    }
  };

  // Runs on initial navigation
  initColorMode();
  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", initColorMode);
</script>
<!-- Copyright -->
<script is:inline define:vars={{ copyright, version: packageData.version }}>
  console.log(String.raw`%c ${copyright}`,'color: #ff5252;')
  console.log('%c Theme.Reimu v' + `${version}` + ' %c https://github.com/D-Sketon/astro-theme-reimu ', 'color: white; background: #ff5252; padding:5px 0;', 'padding:4px;border:1px solid #ff5252;')
</script>