---
import { getCollection } from "astro:content";
import HeaderLink from "./HeaderLink.astro";
import { __ } from "../utils/i18n";
import { SITE, BASE_URL } from "../utils/config";
import RssBtn from "./RssBtn";
import SearchBtn from "./SearchBtn";
import ThemeBtn from "./ThemeBtn";
import SearchBox from "./SearchBox";

type Props = {
  title?: string;
  cover?: string;
};

const { title = SITE.title, cover = `${BASE_URL}/images/banner.webp` } =
  Astro.props;
const posts = await getCollection("blog");
---

<div id="header-nav">
  <nav id="main-nav">
    <HeaderLink href=`${BASE_URL}/` aria-label="Home">{__("home")}</HeaderLink>
    <HeaderLink href=`${BASE_URL}/archives` aria-label="Archives">
      {__("archives")}
    </HeaderLink>
    <HeaderLink href=`${BASE_URL}/about` aria-label="About">
      {__("about")}
    </HeaderLink>
    <span style="position: absolute; right: 100px;">
      <RssBtn client:load url={BASE_URL} /></span
    >
    <span style="position: absolute; right: 60px;"
      ><SearchBtn client:load /></span
    >
    <span style="position: absolute; right: 20px;"
      ><ThemeBtn client:load /></span
    >
  </nav>
</div>
<header id="header">
  {
    cover === `${BASE_URL}/images/banner.webp` ? (
      <>
        <picture style="user-select: none;">
          <source
            media="(max-width: 479px)"
            srcset={`${BASE_URL}/images/banner-600w.webp`}
          />
          <source
            media="(max-width: 799px)"
            srcset={`${BASE_URL}/images/banner-800w.webp`}
          />
          <source media="(min-width: 800px)" srcset={cover} />
          <img src={cover} alt={title} />
        </picture>
      </>
    ) : (
      <img src={cover} alt={title} />
    )
  }
  <div id="header-outer" class="outer">
    <div id="header-title" class="inner">
      <slot />
    </div>
  </div>
</header>
<SearchBox client:load searchList={posts} url={BASE_URL} />

<script>
  let oldScrollTop = 0;
  window.addEventListener("scroll", () => {
    let scrollTop =
      document.documentElement.scrollTop || document.body.scrollTop;
    let diffY = scrollTop - oldScrollTop;
    oldScrollTop = scrollTop;
    if (diffY < 0) {
      document
        .getElementById("header-nav")!
        .classList.remove("header-nav-hidden");
    } else {
      document.getElementById("header-nav")!.classList.add("header-nav-hidden");
    }
  });
</script>

<style lang="stylus">
  #header-nav {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    display: flex;
    justify-content: center;
    overflow: hidden;
    background: var(--color-header-background);
    box-shadow: 0 0 15px 5px rgba(0, 0, 0, 0.1);
    transition: background .3s, top .3s, opacity .3s;
    z-index: 200;
    &.header-nav-hidden {
      top: -80px;
    }
    @media screen and (max-width: 574px) {
      justify-content: flex-start;
    }
  }

  #main-nav {
    display: flex;
    align-items: center;
  }

  #header {
    height: 400px;
    position: relative;

    img {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 150%;
      z-index: -2;

      display: block;
      object-fit: cover;
      transition: 0.3s;
      -webkit-mask: linear-gradient(to top, transparent, #fff 50%);
      mask: linear-gradient(to top, transparent, #fff 50%);

      @media screen and (max-width: 959px) {
        height: 120%;
      }

      @media screen and (max-width: 767px) {
        height: 100%;
      }
    }
  }

  #header-outer {
    height: 100%;
    position: relative;
    max-width: 100%;
    margin: 0;
  }

  #header-title {
    font-family:
      Mulish,
      "Noto Serif SC",
      -apple-system,
      "PingFang SC",
      "Microsoft YaHei",
      sans-serif;
    font-weight: 700;
    text-align: center;
    height: 40px;
    position: absolute;
    top: 50%;
    left: 0;
    margin-top: -20px;
    display: flex;
    flex-direction: column;
    width: 100%;
  }
</style>
